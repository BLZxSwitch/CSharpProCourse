// <auto-generated />
using System;
using DiscountService.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DiscountService.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230527203406_AddRules")]
    partial class AddRules
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DiscountService.Core.ContributorAggregate.Contributor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Contributors");
                });

            modelBuilder.Entity("DiscountService.Core.DiscountAggregate.Discount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("RootRuleGroupId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("RootRuleGroupId")
                        .IsUnique();

                    b.ToTable("Discounts");
                });

            modelBuilder.Entity("DiscountService.Core.DiscountAggregate.Promocode", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Amount")
                        .HasColumnType("integer");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("DiscountId")
                        .HasColumnType("uuid");

                    b.Property<int>("UsedTimes")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DiscountId");

                    b.ToTable("Promocode");
                });

            modelBuilder.Entity("DiscountService.Core.DiscountAggregate.Rules.Rule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("IsComparedToValue")
                        .HasColumnType("boolean");

                    b.Property<Guid>("RuleGroupId")
                        .HasColumnType("uuid");

                    b.Property<string>("RuleOperator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<object>("Value")
                        .HasColumnType("jsonb");

                    b.HasKey("Id");

                    b.HasIndex("RuleGroupId");

                    b.ToTable("Rule");
                });

            modelBuilder.Entity("DiscountService.Core.DiscountAggregate.Rules.RuleGroups.RuleGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("GroupOperator")
                        .HasColumnType("integer");

                    b.Property<Guid?>("ParentGroupId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ParentGroupId");

                    b.ToTable("RuleGroups");
                });

            modelBuilder.Entity("DiscountService.Core.ProjectAggregate.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("Priority")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("DiscountService.Core.ProjectAggregate.ToDoItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ContributorId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDone")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("ProjectId")
                        .HasColumnType("uuid");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("ToDoItems");
                });

            modelBuilder.Entity("DiscountService.Core.DiscountAggregate.Discount", b =>
                {
                    b.HasOne("DiscountService.Core.DiscountAggregate.Rules.RuleGroups.RuleGroup", "RootRuleGroup")
                        .WithOne("Discount")
                        .HasForeignKey("DiscountService.Core.DiscountAggregate.Discount", "RootRuleGroupId");

                    b.OwnsOne("DiscountService.Core.DiscountAggregate.Info", "Info", b1 =>
                        {
                            b1.Property<Guid>("DiscountId")
                                .HasColumnType("uuid");

                            b1.Property<decimal>("Amount")
                                .HasColumnType("numeric");

                            b1.Property<Guid>("EventId")
                                .HasColumnType("uuid");

                            b1.Property<bool>("IsCumulative")
                                .HasColumnType("boolean");

                            b1.HasKey("DiscountId");

                            b1.ToTable("Discounts");

                            b1.WithOwner()
                                .HasForeignKey("DiscountId");
                        });

                    b.Navigation("Info")
                        .IsRequired();

                    b.Navigation("RootRuleGroup");
                });

            modelBuilder.Entity("DiscountService.Core.DiscountAggregate.Promocode", b =>
                {
                    b.HasOne("DiscountService.Core.DiscountAggregate.Discount", "Discount")
                        .WithMany("Promocodes")
                        .HasForeignKey("DiscountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Discount");
                });

            modelBuilder.Entity("DiscountService.Core.DiscountAggregate.Rules.Rule", b =>
                {
                    b.HasOne("DiscountService.Core.DiscountAggregate.Rules.RuleGroups.RuleGroup", "RuleGroup")
                        .WithMany("Rules")
                        .HasForeignKey("RuleGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("DiscountService.Core.DiscountAggregate.Rules.ObjectField", "Comparand", b1 =>
                        {
                            b1.Property<Guid>("RuleId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Address")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Type")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("RuleId");

                            b1.ToTable("Rule");

                            b1.WithOwner()
                                .HasForeignKey("RuleId");
                        });

                    b.OwnsOne("DiscountService.Core.DiscountAggregate.Rules.ObjectField", "Comparer", b1 =>
                        {
                            b1.Property<Guid>("RuleId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Address")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Type")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("RuleId");

                            b1.ToTable("Rule");

                            b1.WithOwner()
                                .HasForeignKey("RuleId");
                        });

                    b.Navigation("Comparand")
                        .IsRequired();

                    b.Navigation("Comparer");

                    b.Navigation("RuleGroup");
                });

            modelBuilder.Entity("DiscountService.Core.DiscountAggregate.Rules.RuleGroups.RuleGroup", b =>
                {
                    b.HasOne("DiscountService.Core.DiscountAggregate.Rules.RuleGroups.RuleGroup", "ParentRuleGroupId")
                        .WithMany("Children")
                        .HasForeignKey("ParentGroupId");

                    b.Navigation("ParentRuleGroupId");
                });

            modelBuilder.Entity("DiscountService.Core.ProjectAggregate.ToDoItem", b =>
                {
                    b.HasOne("DiscountService.Core.ProjectAggregate.Project", null)
                        .WithMany("Items")
                        .HasForeignKey("ProjectId");
                });

            modelBuilder.Entity("DiscountService.Core.DiscountAggregate.Discount", b =>
                {
                    b.Navigation("Promocodes");
                });

            modelBuilder.Entity("DiscountService.Core.DiscountAggregate.Rules.RuleGroups.RuleGroup", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("Discount");

                    b.Navigation("Rules");
                });

            modelBuilder.Entity("DiscountService.Core.ProjectAggregate.Project", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
