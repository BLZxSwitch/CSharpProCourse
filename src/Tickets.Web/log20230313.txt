2023-03-13 08:05:07.660 +03:00 [INF] Registered 6 endpoints in 136 milliseconds.
2023-03-13 08:05:08.368 +03:00 [INF] Executed DbCommand (21ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2023-03-13 08:05:08.444 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "__EFMigrationsHistory" (
    migration_id character varying(150) NOT NULL,
    product_version character varying(32) NOT NULL,
    CONSTRAINT pk___ef_migrations_history PRIMARY KEY (migration_id)
);
2023-03-13 08:05:08.473 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2023-03-13 08:05:08.476 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT migration_id, product_version
FROM "__EFMigrationsHistory"
ORDER BY migration_id;
2023-03-13 08:05:08.485 +03:00 [INF] Applying migration '20230310064952_Init'.
2023-03-13 08:05:08.492 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" (migration_id, product_version)
VALUES ('20230310064952_Init', '7.0.3');
2023-03-13 08:05:08.496 +03:00 [INF] Applying migration '20230312230319_AddUser'.
2023-03-13 08:05:08.555 +03:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM pg_namespace WHERE nspname = 'auth') THEN
        CREATE SCHEMA auth;
    END IF;
END $EF$;
2023-03-13 08:05:08.563 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE auth."Role" (
    id uuid NOT NULL,
    name character varying(256) NULL,
    normalized_name character varying(256) NULL,
    concurrency_stamp text NULL,
    CONSTRAINT pk_role PRIMARY KEY (id)
);
2023-03-13 08:05:08.569 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE auth."User" (
    id uuid NOT NULL,
    is_active boolean NOT NULL DEFAULT FALSE,
    user_name character varying(256) NULL,
    normalized_user_name character varying(256) NULL,
    email character varying(256) NULL,
    normalized_email character varying(256) NULL,
    email_confirmed boolean NOT NULL,
    password_hash text NULL,
    security_stamp text NULL,
    concurrency_stamp text NULL,
    phone_number text NULL,
    phone_number_confirmed boolean NOT NULL,
    two_factor_enabled boolean NOT NULL,
    lockout_end timestamp with time zone NULL,
    lockout_enabled boolean NOT NULL,
    access_failed_count integer NOT NULL,
    CONSTRAINT pk_user PRIMARY KEY (id)
);
2023-03-13 08:05:08.574 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE auth."RoleClaim" (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    role_id uuid NOT NULL,
    claim_type text NULL,
    claim_value text NULL,
    CONSTRAINT pk_role_claim PRIMARY KEY (id),
    CONSTRAINT fk_role_claim_asp_net_roles_role_id FOREIGN KEY (role_id) REFERENCES auth."Role" (id) ON DELETE CASCADE
);
2023-03-13 08:05:08.578 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserLogins" (
    login_provider text NOT NULL,
    provider_key text NOT NULL,
    provider_display_name text NULL,
    user_id uuid NOT NULL,
    CONSTRAINT pk_asp_net_user_logins PRIMARY KEY (login_provider, provider_key),
    CONSTRAINT fk_asp_net_user_logins_asp_net_users_user_id FOREIGN KEY (user_id) REFERENCES auth."User" (id) ON DELETE CASCADE
);
2023-03-13 08:05:08.582 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserTokens" (
    user_id uuid NOT NULL,
    login_provider text NOT NULL,
    name text NOT NULL,
    value text NULL,
    CONSTRAINT pk_asp_net_user_tokens PRIMARY KEY (user_id, login_provider, name),
    CONSTRAINT fk_asp_net_user_tokens_asp_net_users_user_id FOREIGN KEY (user_id) REFERENCES auth."User" (id) ON DELETE CASCADE
);
2023-03-13 08:05:08.585 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE auth."UserClaim" (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    user_id uuid NOT NULL,
    claim_type text NULL,
    claim_value text NULL,
    CONSTRAINT pk_user_claim PRIMARY KEY (id),
    CONSTRAINT fk_user_claim_asp_net_users_user_id FOREIGN KEY (user_id) REFERENCES auth."User" (id) ON DELETE CASCADE
);
2023-03-13 08:05:08.588 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE auth."UserRole" (
    "UserId" uuid NOT NULL,
    "RoleId" uuid NOT NULL,
    CONSTRAINT pk_user_role PRIMARY KEY ("UserId", "RoleId"),
    CONSTRAINT fk_user_role_role_role_id FOREIGN KEY ("RoleId") REFERENCES auth."Role" (id) ON DELETE CASCADE,
    CONSTRAINT fk_user_role_user_user_id FOREIGN KEY ("UserId") REFERENCES auth."User" (id) ON DELETE CASCADE
);
2023-03-13 08:05:08.590 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX ix_asp_net_user_logins_user_id ON "AspNetUserLogins" (user_id);
2023-03-13 08:05:08.591 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "RoleNameIndex" ON auth."Role" (normalized_name);
2023-03-13 08:05:08.593 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX ix_role_claim_role_id ON auth."RoleClaim" (role_id);
2023-03-13 08:05:08.595 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "EmailIndex" ON auth."User" (normalized_email);
2023-03-13 08:05:08.597 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "UserNameIndex" ON auth."User" (normalized_user_name);
2023-03-13 08:05:08.600 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX ix_user_claim_user_id ON auth."UserClaim" (user_id);
2023-03-13 08:05:08.601 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX ix_user_role_role_id ON auth."UserRole" ("RoleId");
2023-03-13 08:05:08.602 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" (migration_id, product_version)
VALUES ('20230312230319_AddUser', '7.0.3');
2023-03-13 08:05:08.635 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END
FROM pg_class AS cls
JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
WHERE
        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND
        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND
        -- Exclude tables which are members of PG extensions
        NOT EXISTS (
            SELECT 1 FROM pg_depend WHERE
                classid=(
                    SELECT cls.oid
                    FROM pg_class AS cls
                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'
                ) AND
                objid=cls.oid AND
                deptype IN ('e', 'x')
        )
2023-03-13 08:05:08.740 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM auth."Role" AS r)
2023-03-13 08:05:08.835 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?', @p2='?', @p3='?', @p4='?' (DbType = Guid), @p5='?', @p6='?', @p7='?', @p8='?' (DbType = Guid), @p9='?', @p10='?', @p11='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO auth."Role" (id, concurrency_stamp, name, normalized_name)
VALUES (@p0, @p1, @p2, @p3);
INSERT INTO auth."Role" (id, concurrency_stamp, name, normalized_name)
VALUES (@p4, @p5, @p6, @p7);
INSERT INTO auth."Role" (id, concurrency_stamp, name, normalized_name)
VALUES (@p8, @p9, @p10, @p11);
2023-03-13 08:05:08.856 +03:00 [INF] User profile is available. Using '/Users/gelagaev/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-03-13 08:05:08.889 +03:00 [INF] Now listening on: http://localhost:57679
2023-03-13 08:05:08.889 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2023-03-13 08:05:08.889 +03:00 [INF] Hosting environment: Development
2023-03-13 08:05:08.889 +03:00 [INF] Content root path: /Users/gelagaev/Projects/CleanArchitecture/src/Tickets.Web
2023-03-13 08:06:08.242 +03:00 [INF] Application is shutting down...
